{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useUtils } from './useUtils';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { getDisplayDate } from '../../_helpers/text-field-helper';\nimport { usePickerState } from './usePickerState';\n\nfunction parseInputString(value, utils, format) {\n  try {\n    return utils.parse(value, format);\n  } catch (_unused) {\n    return null;\n  }\n}\n\nexport function useKeyboardPickerState(props, options) {\n  var _props$format = props.format,\n      format = _props$format === void 0 ? options.getDefaultFormat() : _props$format,\n      inputValue = props.inputValue,\n      _onChange = props.onChange,\n      value = props.value;\n  var utils = useUtils();\n  var displayDate = getDisplayDate(value, format, utils, value === null, props);\n\n  var _useState = useState(displayDate),\n      _useState2 = _slicedToArray(_useState, 2),\n      innerInputValue = _useState2[0],\n      setInnerInputValue = _useState2[1];\n\n  var dateValue = inputValue ? parseInputString(inputValue, utils, format) : value;\n  useEffect(function () {\n    if (value === null || utils.isValid(value)) {\n      setInnerInputValue(displayDate);\n    }\n  }, [displayDate, setInnerInputValue, utils, value]);\n  var handleKeyboardChange = useCallback(function (date) {\n    _onChange(date, date === null ? null : utils.format(date, format));\n  }, [format, _onChange, utils]);\n\n  var _usePickerState = usePickerState( // Extend props interface\n  _extends({}, props, {\n    value: dateValue,\n    onChange: handleKeyboardChange\n  }), options),\n      innerInputProps = _usePickerState.inputProps,\n      wrapperProps = _usePickerState.wrapperProps,\n      pickerProps = _usePickerState.pickerProps;\n\n  var inputProps = useMemo(function () {\n    return _extends({}, innerInputProps, {\n      // reuse validation and open/close logic\n      format: wrapperProps.format,\n      inputValue: inputValue || innerInputValue,\n      onChange: function onChange(value) {\n        setInnerInputValue(value || '');\n        var date = value === null ? null : utils.parse(value, wrapperProps.format);\n\n        _onChange(date, value);\n      }\n    });\n  }, [innerInputProps, innerInputValue, inputValue, _onChange, utils, wrapperProps.format]);\n  return {\n    inputProps: inputProps,\n    wrapperProps: wrapperProps,\n    pickerProps: pickerProps\n  };\n}","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/@material-ui/pickers/esm/_shared/hooks/useKeyboardPickerState.js"],"names":["_extends","_slicedToArray","useUtils","useCallback","useEffect","useMemo","useState","getDisplayDate","usePickerState","parseInputString","value","utils","format","parse","_unused","useKeyboardPickerState","props","options","_props$format","getDefaultFormat","inputValue","_onChange","onChange","displayDate","_useState","_useState2","innerInputValue","setInnerInputValue","dateValue","isValid","handleKeyboardChange","date","_usePickerState","innerInputProps","inputProps","wrapperProps","pickerProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useUtils } from './useUtils';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { getDisplayDate } from '../../_helpers/text-field-helper';\nimport { usePickerState } from './usePickerState';\n\nfunction parseInputString(value, utils, format) {\n  try {\n    return utils.parse(value, format);\n  } catch (_unused) {\n    return null;\n  }\n}\n\nexport function useKeyboardPickerState(props, options) {\n  var _props$format = props.format,\n      format = _props$format === void 0 ? options.getDefaultFormat() : _props$format,\n      inputValue = props.inputValue,\n      _onChange = props.onChange,\n      value = props.value;\n  var utils = useUtils();\n  var displayDate = getDisplayDate(value, format, utils, value === null, props);\n\n  var _useState = useState(displayDate),\n      _useState2 = _slicedToArray(_useState, 2),\n      innerInputValue = _useState2[0],\n      setInnerInputValue = _useState2[1];\n\n  var dateValue = inputValue ? parseInputString(inputValue, utils, format) : value;\n  useEffect(function () {\n    if (value === null || utils.isValid(value)) {\n      setInnerInputValue(displayDate);\n    }\n  }, [displayDate, setInnerInputValue, utils, value]);\n  var handleKeyboardChange = useCallback(function (date) {\n    _onChange(date, date === null ? null : utils.format(date, format));\n  }, [format, _onChange, utils]);\n\n  var _usePickerState = usePickerState( // Extend props interface\n  _extends({}, props, {\n    value: dateValue,\n    onChange: handleKeyboardChange\n  }), options),\n      innerInputProps = _usePickerState.inputProps,\n      wrapperProps = _usePickerState.wrapperProps,\n      pickerProps = _usePickerState.pickerProps;\n\n  var inputProps = useMemo(function () {\n    return _extends({}, innerInputProps, {\n      // reuse validation and open/close logic\n      format: wrapperProps.format,\n      inputValue: inputValue || innerInputValue,\n      onChange: function onChange(value) {\n        setInnerInputValue(value || '');\n        var date = value === null ? null : utils.parse(value, wrapperProps.format);\n\n        _onChange(date, value);\n      }\n    });\n  }, [innerInputProps, innerInputValue, inputValue, _onChange, utils, wrapperProps.format]);\n  return {\n    inputProps: inputProps,\n    wrapperProps: wrapperProps,\n    pickerProps: pickerProps\n  };\n}"]},"metadata":{},"sourceType":"module"}