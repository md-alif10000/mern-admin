{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { arrayIncludes } from '../../_helpers/utils';\nexport function useViews(views, openTo, onChange) {\n  var _React$useState = React.useState(openTo && arrayIncludes(views, openTo) ? openTo : views[0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openView = _React$useState2[0],\n      setOpenView = _React$useState2[1];\n\n  var handleChangeAndOpenNext = React.useCallback(function (date, isFinish) {\n    var nextViewToOpen = views[views.indexOf(openView) + 1];\n\n    if (isFinish && nextViewToOpen) {\n      // do not close picker if needs to show next view\n      onChange(date, false);\n      setOpenView(nextViewToOpen);\n      return;\n    }\n\n    onChange(date, Boolean(isFinish));\n  }, [onChange, openView, views]);\n  return {\n    handleChangeAndOpenNext: handleChangeAndOpenNext,\n    openView: openView,\n    setOpenView: setOpenView\n  };\n}","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/@material-ui/pickers/esm/_shared/hooks/useViews.js"],"names":["_slicedToArray","React","arrayIncludes","useViews","views","openTo","onChange","_React$useState","useState","_React$useState2","openView","setOpenView","handleChangeAndOpenNext","useCallback","date","isFinish","nextViewToOpen","indexOf","Boolean"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,QAAjC,EAA2C;AAChD,MAAIC,eAAe,GAAGN,KAAK,CAACO,QAAN,CAAeH,MAAM,IAAIH,aAAa,CAACE,KAAD,EAAQC,MAAR,CAAvB,GAAyCA,MAAzC,GAAkDD,KAAK,CAAC,CAAD,CAAtE,CAAtB;AAAA,MACIK,gBAAgB,GAAGT,cAAc,CAACO,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,QAAQ,GAAGD,gBAAgB,CAAC,CAAD,CAF/B;AAAA,MAGIE,WAAW,GAAGF,gBAAgB,CAAC,CAAD,CAHlC;;AAKA,MAAIG,uBAAuB,GAAGX,KAAK,CAACY,WAAN,CAAkB,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AACxE,QAAIC,cAAc,GAAGZ,KAAK,CAACA,KAAK,CAACa,OAAN,CAAcP,QAAd,IAA0B,CAA3B,CAA1B;;AAEA,QAAIK,QAAQ,IAAIC,cAAhB,EAAgC;AAC9B;AACAV,MAAAA,QAAQ,CAACQ,IAAD,EAAO,KAAP,CAAR;AACAH,MAAAA,WAAW,CAACK,cAAD,CAAX;AACA;AACD;;AAEDV,IAAAA,QAAQ,CAACQ,IAAD,EAAOI,OAAO,CAACH,QAAD,CAAd,CAAR;AACD,GAX6B,EAW3B,CAACT,QAAD,EAAWI,QAAX,EAAqBN,KAArB,CAX2B,CAA9B;AAYA,SAAO;AACLQ,IAAAA,uBAAuB,EAAEA,uBADpB;AAELF,IAAAA,QAAQ,EAAEA,QAFL;AAGLC,IAAAA,WAAW,EAAEA;AAHR,GAAP;AAKD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { arrayIncludes } from '../../_helpers/utils';\nexport function useViews(views, openTo, onChange) {\n  var _React$useState = React.useState(openTo && arrayIncludes(views, openTo) ? openTo : views[0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openView = _React$useState2[0],\n      setOpenView = _React$useState2[1];\n\n  var handleChangeAndOpenNext = React.useCallback(function (date, isFinish) {\n    var nextViewToOpen = views[views.indexOf(openView) + 1];\n\n    if (isFinish && nextViewToOpen) {\n      // do not close picker if needs to show next view\n      onChange(date, false);\n      setOpenView(nextViewToOpen);\n      return;\n    }\n\n    onChange(date, Boolean(isFinish));\n  }, [onChange, openView, views]);\n  return {\n    handleChangeAndOpenNext: handleChangeAndOpenNext,\n    openView: openView,\n    setOpenView: setOpenView\n  };\n}"]},"metadata":{},"sourceType":"module"}