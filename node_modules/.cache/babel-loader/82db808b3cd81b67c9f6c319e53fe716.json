{"ast":null,"code":"import _regeneratorRuntime from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"../helpers/axios\";\nimport { ticketConstants } from \"./constants\";\nimport Swal from \"sweetalert2\";\nexport var addTicket = function addTicket(form) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              console.log(form);\n              dispatch({\n                type: ticketConstants.ADD_NEW_TICKET_REQUEST\n              });\n              _context.next = 5;\n              return axios.post(\"ticket/addTicket\", form);\n\n            case 5:\n              res = _context.sent;\n\n              if (res.status == 201) {\n                dispatch({\n                  type: ticketConstants.ADD_NEW_TICKET_SUCCESS\n                });\n                Swal.fire(\"Great...\", \"Ticket added successfully...!\", \"success\");\n              } else {\n                dispatch({\n                  type: ticketConstants.ADD_NEW_TICKET_FAILURE\n                });\n                Swal.fire(\"Oops...\", \"Something went wrong.!\", \"error\");\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/src/actions/ticket.action.js"],"names":["axios","ticketConstants","Swal","addTicket","form","dispatch","console","log","type","ADD_NEW_TICKET_REQUEST","post","res","status","ADD_NEW_TICKET_SUCCESS","fire","ADD_NEW_TICKET_FAILURE"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AACjC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,cAAAA,QAAQ,CAAC;AAAEG,gBAAAA,IAAI,EAAEP,eAAe,CAACQ;AAAxB,eAAD,CAAR;AAHG;AAAA,qBAIeT,KAAK,CAACU,IAAN,qBAA+BN,IAA/B,CAJf;;AAAA;AAIGO,cAAAA,GAJH;;AAKH,kBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrBP,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAEP,eAAe,CAACY;AAAxB,iBAAD,CAAR;AACAX,gBAAAA,IAAI,CAACY,IAAL,CAAU,UAAV,EAAsB,+BAAtB,EAAuD,SAAvD;AAED,eAJD,MAIO;AACLT,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAEP,eAAe,CAACc;AAAxB,iBAAD,CAAR;AAEAb,gBAAAA,IAAI,CAACY,IAAL,CAAU,SAAV,EAAqB,wBAArB,EAA+C,OAA/C;AACD;;AAbE;AAAA;;AAAA;AAAA;AAAA;AAeHR,cAAAA,OAAO,CAACC,GAAR;;AAfG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkBD,CAnBM","sourcesContent":["import axios from \"../helpers/axios\";\nimport { ticketConstants } from \"./constants\";\nimport Swal from \"sweetalert2\";\n\nexport const addTicket = (form) => {\n  return async (dispatch) => {\n    try {\n      console.log(form);\n      dispatch({ type: ticketConstants.ADD_NEW_TICKET_REQUEST });\n      const res = await axios.post(`ticket/addTicket`, form);\n      if (res.status == 201) {\n        dispatch({ type: ticketConstants.ADD_NEW_TICKET_SUCCESS });\n        Swal.fire(\"Great...\", \"Ticket added successfully...!\", \"success\");\n       \n      } else {\n        dispatch({ type: ticketConstants.ADD_NEW_TICKET_FAILURE });\n\n        Swal.fire(\"Oops...\", \"Something went wrong.!\", \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}