{"ast":null,"code":"import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, numberOfDigits);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/date-fns/esm/_lib/format/formatters/index.js"],"names":["lightFormatters","getUTCDayOfYear","getUTCISOWeek","getUTCISOWeekYear","getUTCWeek","getUTCWeekYear","addLeadingZeros","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","date","token","localize","era","getUTCFullYear","width","y","signedYear","year","ordinalNumber","unit","Y","options","signedWeekYear","weekYear","twoDigitYear","length","R","isoWeekYear","u","Q","quarter","Math","ceil","getUTCMonth","String","context","q","M","month","L","w","week","I","isoWeek","d","getUTCDate","D","dayOfYear","E","dayOfWeek","getUTCDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","hours","getUTCHours","dayPeriodEnumValue","dayPeriod","b","B","h","H","K","k","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","floor","pow","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","getTime","T","offset","dirtyDelimiter","sign","absOffset","abs","minutes","delimiter"],"mappings":"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","sourcesContent":["import lightFormatters from '../lightFormatters/index.js'\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js'\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js'\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js'\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js'\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js'\nimport addLeadingZeros from '../../addLeadingZeros/index.js'\n\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n}\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, { width: 'abbreviated' })\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, { width: 'narrow' })\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, { width: 'wide' })\n    }\n  },\n\n  // Year\n  y: function(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear()\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear\n      return localize.ordinalNumber(year, { unit: 'year' })\n    }\n\n    return lightFormatters.y(date, token)\n  },\n\n  // Local week-numbering year\n  Y: function(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options)\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100\n      return addLeadingZeros(twoDigitYear, 2)\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, { unit: 'year' })\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length)\n  },\n\n  // ISO week-numbering year\n  R: function(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date)\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length)\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function(date, token) {\n    var year = date.getUTCFullYear()\n    return addLeadingZeros(year, token.length)\n  },\n\n  // Quarter\n  Q: function(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3)\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter)\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2)\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, { unit: 'quarter' })\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // Stand-alone quarter\n  q: function(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3)\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter)\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2)\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, { unit: 'quarter' })\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        })\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        })\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        })\n    }\n  },\n\n  // Month\n  M: function(date, token, localize) {\n    var month = date.getUTCMonth()\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token)\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, { unit: 'month' })\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, { width: 'narrow', context: 'formatting' })\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // Stand-alone month\n  L: function(date, token, localize) {\n    var month = date.getUTCMonth()\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1)\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2)\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, { unit: 'month' })\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        })\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, { width: 'narrow', context: 'standalone' })\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, { width: 'wide', context: 'standalone' })\n    }\n  },\n\n  // Local week of year\n  w: function(date, token, localize, options) {\n    var week = getUTCWeek(date, options)\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, { unit: 'week' })\n    }\n\n    return addLeadingZeros(week, token.length)\n  },\n\n  // ISO week of year\n  I: function(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date)\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, { unit: 'week' })\n    }\n\n    return addLeadingZeros(isoWeek, token.length)\n  },\n\n  // Day of the month\n  d: function(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), { unit: 'date' })\n    }\n\n    return lightFormatters.d(date, token)\n  },\n\n  // Day of year\n  D: function(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date)\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, { unit: 'dayOfYear' })\n    }\n\n    return addLeadingZeros(dayOfYear, token.length)\n  },\n\n  // Day of week\n  E: function(date, token, localize) {\n    var dayOfWeek = date.getUTCDay()\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        })\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // Local day of week\n  e: function(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay()\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek)\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2)\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, { unit: 'day' })\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        })\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay()\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek)\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length)\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, { unit: 'day' })\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        })\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        })\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        })\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'standalone' })\n    }\n  },\n\n  // ISO day of week\n  i: function(date, token, localize) {\n    var dayOfWeek = date.getUTCDay()\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek)\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length)\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, { unit: 'day' })\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        })\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // AM or PM\n  a: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am'\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    var dayPeriodEnumValue\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am'\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    var dayPeriodEnumValue\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // Hour [1-12]\n  h: function(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12\n      if (hours === 0) hours = 12\n      return localize.ordinalNumber(hours, { unit: 'hour' })\n    }\n\n    return lightFormatters.h(date, token)\n  },\n\n  // Hour [0-23]\n  H: function(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), { unit: 'hour' })\n    }\n\n    return lightFormatters.H(date, token)\n  },\n\n  // Hour [0-11]\n  K: function(date, token, localize) {\n    var hours = date.getUTCHours() % 12\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, { unit: 'hour' })\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Hour [1-24]\n  k: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    if (hours === 0) hours = 24\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, { unit: 'hour' })\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Minute\n  m: function(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), { unit: 'minute' })\n    }\n\n    return lightFormatters.m(date, token)\n  },\n\n  // Second\n  s: function(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), { unit: 'second' })\n    }\n\n    return lightFormatters.s(date, token)\n  },\n\n  // Fraction of second\n  S: function(date, token) {\n    var numberOfDigits = token.length\n    var milliseconds = date.getUTCMilliseconds()\n    var fractionalSeconds = Math.floor(\n      milliseconds * Math.pow(10, numberOfDigits - 3)\n    )\n    return addLeadingZeros(fractionalSeconds, numberOfDigits)\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    if (timezoneOffset === 0) {\n      return 'Z'\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX': // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx': // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (GMT)\n  O: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Seconds timestamp\n  t: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timestamp = Math.floor(originalDate.getTime() / 1000)\n    return addLeadingZeros(timestamp, token.length)\n  },\n\n  // Milliseconds timestamp\n  T: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timestamp = originalDate.getTime()\n    return addLeadingZeros(timestamp, token.length)\n  }\n}\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  if (minutes === 0) {\n    return sign + String(hours)\n  }\n  var delimiter = dirtyDelimiter || ''\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2)\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+'\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2)\n  }\n  return formatTimezone(offset, dirtyDelimiter)\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2)\n  var minutes = addLeadingZeros(absOffset % 60, 2)\n  return sign + hours + delimiter + minutes\n}\n\nexport default formatters\n"]},"metadata":{},"sourceType":"module"}