{"ast":null,"code":"export var getDisplayDate = function getDisplayDate(value, format, utils, isEmpty, _ref) {\n  var invalidLabel = _ref.invalidLabel,\n      emptyLabel = _ref.emptyLabel,\n      labelFunc = _ref.labelFunc;\n  var date = utils.date(value);\n\n  if (labelFunc) {\n    return labelFunc(isEmpty ? null : date, invalidLabel);\n  }\n\n  if (isEmpty) {\n    return emptyLabel || '';\n  }\n\n  return utils.isValid(date) ? utils.format(date, format) : invalidLabel;\n};\n\nvar getComparisonMaxDate = function getComparisonMaxDate(utils, strictCompareDates, date) {\n  if (strictCompareDates) {\n    return date;\n  }\n\n  return utils.endOfDay(date);\n};\n\nvar getComparisonMinDate = function getComparisonMinDate(utils, strictCompareDates, date) {\n  if (strictCompareDates) {\n    return date;\n  }\n\n  return utils.startOfDay(date);\n};\n\nexport var validate = function validate(value, utils, _ref2) {\n  var maxDate = _ref2.maxDate,\n      minDate = _ref2.minDate,\n      disablePast = _ref2.disablePast,\n      disableFuture = _ref2.disableFuture,\n      maxDateMessage = _ref2.maxDateMessage,\n      minDateMessage = _ref2.minDateMessage,\n      invalidDateMessage = _ref2.invalidDateMessage,\n      strictCompareDates = _ref2.strictCompareDates;\n  var parsedValue = utils.date(value); // if null - do not show error\n\n  if (value === null) {\n    return '';\n  }\n\n  if (!utils.isValid(value)) {\n    return invalidDateMessage;\n  }\n\n  if (maxDate && utils.isAfter(parsedValue, getComparisonMaxDate(utils, !!strictCompareDates, utils.date(maxDate)))) {\n    return maxDateMessage;\n  }\n\n  if (disableFuture && utils.isAfter(parsedValue, getComparisonMaxDate(utils, !!strictCompareDates, utils.date()))) {\n    return maxDateMessage;\n  }\n\n  if (minDate && utils.isBefore(parsedValue, getComparisonMinDate(utils, !!strictCompareDates, utils.date(minDate)))) {\n    return minDateMessage;\n  }\n\n  if (disablePast && utils.isBefore(parsedValue, getComparisonMinDate(utils, !!strictCompareDates, utils.date()))) {\n    return minDateMessage;\n  }\n\n  return '';\n};\nexport function pick12hOr24hFormat(userFormat) {\n  var ampm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var formats = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (userFormat) {\n    return userFormat;\n  }\n\n  return ampm ? formats['12h'] : formats['24h'];\n}\nexport function makeMaskFromFormat(format, numberMaskChar) {\n  return format.replace(/[a-z]/gi, numberMaskChar);\n}\nexport var maskedDateFormatter = function maskedDateFormatter(mask, numberMaskChar, refuse) {\n  return function (value) {\n    if (value === '') {\n      return value;\n    }\n\n    var result = '';\n    var parsed = value.replace(refuse, '');\n    var i = 0;\n    var n = 0;\n\n    while (i < mask.length) {\n      var maskChar = mask[i];\n\n      if (maskChar === numberMaskChar && n < parsed.length) {\n        var parsedChar = parsed[n];\n        result += parsedChar;\n        n += 1;\n      } else {\n        result += maskChar;\n      }\n\n      i += 1;\n    }\n\n    return result;\n  };\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/@material-ui/pickers/esm/_helpers/text-field-helper.js"],"names":["getDisplayDate","value","format","utils","isEmpty","_ref","invalidLabel","emptyLabel","labelFunc","date","isValid","getComparisonMaxDate","strictCompareDates","endOfDay","getComparisonMinDate","startOfDay","validate","_ref2","maxDate","minDate","disablePast","disableFuture","maxDateMessage","minDateMessage","invalidDateMessage","parsedValue","isAfter","isBefore","pick12hOr24hFormat","userFormat","ampm","arguments","length","undefined","formats","makeMaskFromFormat","numberMaskChar","replace","maskedDateFormatter","mask","refuse","result","parsed","i","n","maskChar","parsedChar"],"mappings":"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","sourcesContent":["export var getDisplayDate = function getDisplayDate(value, format, utils, isEmpty, _ref) {\n  var invalidLabel = _ref.invalidLabel,\n      emptyLabel = _ref.emptyLabel,\n      labelFunc = _ref.labelFunc;\n  var date = utils.date(value);\n\n  if (labelFunc) {\n    return labelFunc(isEmpty ? null : date, invalidLabel);\n  }\n\n  if (isEmpty) {\n    return emptyLabel || '';\n  }\n\n  return utils.isValid(date) ? utils.format(date, format) : invalidLabel;\n};\n\nvar getComparisonMaxDate = function getComparisonMaxDate(utils, strictCompareDates, date) {\n  if (strictCompareDates) {\n    return date;\n  }\n\n  return utils.endOfDay(date);\n};\n\nvar getComparisonMinDate = function getComparisonMinDate(utils, strictCompareDates, date) {\n  if (strictCompareDates) {\n    return date;\n  }\n\n  return utils.startOfDay(date);\n};\n\nexport var validate = function validate(value, utils, _ref2) {\n  var maxDate = _ref2.maxDate,\n      minDate = _ref2.minDate,\n      disablePast = _ref2.disablePast,\n      disableFuture = _ref2.disableFuture,\n      maxDateMessage = _ref2.maxDateMessage,\n      minDateMessage = _ref2.minDateMessage,\n      invalidDateMessage = _ref2.invalidDateMessage,\n      strictCompareDates = _ref2.strictCompareDates;\n  var parsedValue = utils.date(value); // if null - do not show error\n\n  if (value === null) {\n    return '';\n  }\n\n  if (!utils.isValid(value)) {\n    return invalidDateMessage;\n  }\n\n  if (maxDate && utils.isAfter(parsedValue, getComparisonMaxDate(utils, !!strictCompareDates, utils.date(maxDate)))) {\n    return maxDateMessage;\n  }\n\n  if (disableFuture && utils.isAfter(parsedValue, getComparisonMaxDate(utils, !!strictCompareDates, utils.date()))) {\n    return maxDateMessage;\n  }\n\n  if (minDate && utils.isBefore(parsedValue, getComparisonMinDate(utils, !!strictCompareDates, utils.date(minDate)))) {\n    return minDateMessage;\n  }\n\n  if (disablePast && utils.isBefore(parsedValue, getComparisonMinDate(utils, !!strictCompareDates, utils.date()))) {\n    return minDateMessage;\n  }\n\n  return '';\n};\nexport function pick12hOr24hFormat(userFormat) {\n  var ampm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var formats = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (userFormat) {\n    return userFormat;\n  }\n\n  return ampm ? formats['12h'] : formats['24h'];\n}\nexport function makeMaskFromFormat(format, numberMaskChar) {\n  return format.replace(/[a-z]/gi, numberMaskChar);\n}\nexport var maskedDateFormatter = function maskedDateFormatter(mask, numberMaskChar, refuse) {\n  return function (value) {\n    if (value === '') {\n      return value;\n    }\n\n    var result = '';\n    var parsed = value.replace(refuse, '');\n    var i = 0;\n    var n = 0;\n\n    while (i < mask.length) {\n      var maskChar = mask[i];\n\n      if (maskChar === numberMaskChar && n < parsed.length) {\n        var parsedChar = parsed[n];\n        result += parsedChar;\n        n += 1;\n      } else {\n        result += maskChar;\n      }\n\n      i += 1;\n    }\n\n    return result;\n  };\n};"]},"metadata":{},"sourceType":"module"}