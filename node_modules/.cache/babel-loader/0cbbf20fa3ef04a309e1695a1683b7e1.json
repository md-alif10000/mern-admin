{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Clock from './Clock';\nimport ClockType from '../../constants/ClockType';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { getHourNumbers, getMinutesNumbers } from './ClockNumbers';\nimport { convertToMeridiem, getMeridiem } from '../../_helpers/time-utils';\nexport var ClockView = function ClockView(_ref) {\n  var type = _ref.type,\n      onHourChange = _ref.onHourChange,\n      onMinutesChange = _ref.onMinutesChange,\n      onSecondsChange = _ref.onSecondsChange,\n      ampm = _ref.ampm,\n      date = _ref.date,\n      minutesStep = _ref.minutesStep;\n  var utils = useUtils();\n  var viewProps = React.useMemo(function () {\n    switch (type) {\n      case ClockType.HOURS:\n        return {\n          value: utils.getHours(date),\n          children: getHourNumbers({\n            date: date,\n            utils: utils,\n            ampm: Boolean(ampm)\n          }),\n          onChange: function onChange(value, isFinish) {\n            var currentMeridiem = getMeridiem(date, utils);\n            var updatedTimeWithMeridiem = convertToMeridiem(utils.setHours(date, value), currentMeridiem, Boolean(ampm), utils);\n            onHourChange(updatedTimeWithMeridiem, isFinish);\n          }\n        };\n\n      case ClockType.MINUTES:\n        var minutesValue = utils.getMinutes(date);\n        return {\n          value: minutesValue,\n          children: getMinutesNumbers({\n            value: minutesValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setMinutes(date, value);\n            onMinutesChange(updatedTime, isFinish);\n          }\n        };\n\n      case ClockType.SECONDS:\n        var secondsValue = utils.getSeconds(date);\n        return {\n          value: secondsValue,\n          children: getMinutesNumbers({\n            value: secondsValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setSeconds(date, value);\n            onSecondsChange(updatedTime, isFinish);\n          }\n        };\n\n      default:\n        throw new Error('You must provide the type for TimePickerView');\n    }\n  }, [ampm, date, onHourChange, onMinutesChange, onSecondsChange, type, utils]);\n  return React.createElement(Clock, _extends({\n    type: type,\n    ampm: ampm,\n    minutesStep: minutesStep\n  }, viewProps));\n};\nClockView.displayName = 'TimePickerView';\nprocess.env.NODE_ENV !== \"production\" ? ClockView.propTypes = {\n  date: PropTypes.object.isRequired,\n  onHourChange: PropTypes.func.isRequired,\n  onMinutesChange: PropTypes.func.isRequired,\n  onSecondsChange: PropTypes.func.isRequired,\n  ampm: PropTypes.bool,\n  minutesStep: PropTypes.number,\n  type: PropTypes.oneOf(Object.keys(ClockType).map(function (key) {\n    return ClockType[key];\n  })).isRequired\n} : void 0;\nClockView.defaultProps = {\n  ampm: true,\n  minutesStep: 1\n};\nexport default React.memo(ClockView);","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/@material-ui/pickers/esm/views/Clock/ClockView.js"],"names":["_extends","React","PropTypes","Clock","ClockType","useUtils","getHourNumbers","getMinutesNumbers","convertToMeridiem","getMeridiem","ClockView","_ref","type","onHourChange","onMinutesChange","onSecondsChange","ampm","date","minutesStep","utils","viewProps","useMemo","HOURS","value","getHours","children","Boolean","onChange","isFinish","currentMeridiem","updatedTimeWithMeridiem","setHours","MINUTES","minutesValue","getMinutes","updatedTime","setMinutes","SECONDS","secondsValue","getSeconds","setSeconds","Error","createElement","displayName","process","env","NODE_ENV","propTypes","object","isRequired","func","bool","number","oneOf","Object","keys","map","key","defaultProps","memo"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Clock from './Clock';\nimport ClockType from '../../constants/ClockType';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { getHourNumbers, getMinutesNumbers } from './ClockNumbers';\nimport { convertToMeridiem, getMeridiem } from '../../_helpers/time-utils';\nexport var ClockView = function ClockView(_ref) {\n  var type = _ref.type,\n      onHourChange = _ref.onHourChange,\n      onMinutesChange = _ref.onMinutesChange,\n      onSecondsChange = _ref.onSecondsChange,\n      ampm = _ref.ampm,\n      date = _ref.date,\n      minutesStep = _ref.minutesStep;\n  var utils = useUtils();\n  var viewProps = React.useMemo(function () {\n    switch (type) {\n      case ClockType.HOURS:\n        return {\n          value: utils.getHours(date),\n          children: getHourNumbers({\n            date: date,\n            utils: utils,\n            ampm: Boolean(ampm)\n          }),\n          onChange: function onChange(value, isFinish) {\n            var currentMeridiem = getMeridiem(date, utils);\n            var updatedTimeWithMeridiem = convertToMeridiem(utils.setHours(date, value), currentMeridiem, Boolean(ampm), utils);\n            onHourChange(updatedTimeWithMeridiem, isFinish);\n          }\n        };\n\n      case ClockType.MINUTES:\n        var minutesValue = utils.getMinutes(date);\n        return {\n          value: minutesValue,\n          children: getMinutesNumbers({\n            value: minutesValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setMinutes(date, value);\n            onMinutesChange(updatedTime, isFinish);\n          }\n        };\n\n      case ClockType.SECONDS:\n        var secondsValue = utils.getSeconds(date);\n        return {\n          value: secondsValue,\n          children: getMinutesNumbers({\n            value: secondsValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setSeconds(date, value);\n            onSecondsChange(updatedTime, isFinish);\n          }\n        };\n\n      default:\n        throw new Error('You must provide the type for TimePickerView');\n    }\n  }, [ampm, date, onHourChange, onMinutesChange, onSecondsChange, type, utils]);\n  return React.createElement(Clock, _extends({\n    type: type,\n    ampm: ampm,\n    minutesStep: minutesStep\n  }, viewProps));\n};\nClockView.displayName = 'TimePickerView';\nprocess.env.NODE_ENV !== \"production\" ? ClockView.propTypes = {\n  date: PropTypes.object.isRequired,\n  onHourChange: PropTypes.func.isRequired,\n  onMinutesChange: PropTypes.func.isRequired,\n  onSecondsChange: PropTypes.func.isRequired,\n  ampm: PropTypes.bool,\n  minutesStep: PropTypes.number,\n  type: PropTypes.oneOf(Object.keys(ClockType).map(function (key) {\n    return ClockType[key];\n  })).isRequired\n} : void 0;\nClockView.defaultProps = {\n  ampm: true,\n  minutesStep: 1\n};\nexport default React.memo(ClockView);"]},"metadata":{},"sourceType":"module"}