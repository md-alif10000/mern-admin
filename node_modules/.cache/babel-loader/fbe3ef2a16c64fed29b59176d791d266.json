{"ast":null,"code":"import _regeneratorRuntime from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"../helpers/axios\";\nimport { authConstants, categoryConstants } from \"./constants\";\nimport Swal from \"sweetalert2\";\nexport var getAllCategory = function getAllCategory() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, categoryList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: categoryConstants.GET_ALL_CATEGORIES_REQUEST\n              });\n              _context.next = 3;\n              return axios.get(\"category/getcategory\");\n\n            case 3:\n              res = _context.sent;\n              console.log(res);\n\n              if (res.status === 200) {\n                categoryList = res.data.categoryList;\n                console.log(categoryList);\n                dispatch({\n                  type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n                  payload: {\n                    categories: categoryList\n                  }\n                });\n              } else {\n                dispatch({\n                  type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n                  payload: {\n                    error: res.data.error\n                  }\n                });\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var addCategory = function addCategory(form) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: categoryConstants.ADD_NEW_CATEGORY_REQUEST\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post(\"/category/create\", form);\n\n            case 4:\n              res = _context2.sent;\n              console.log(res);\n\n              if (res.status === 201) {\n                dispatch({\n                  type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n                  payload: {\n                    category: res.data.category\n                  }\n                });\n                Swal.fire(\"Wow..\", \"Successfully added category...!\", \"success\");\n              } else {\n                dispatch({\n                  type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\n                  payload: res.data.error\n                });\n                Swal.fire(\"Opps..\", \"Something went wrong...!\", \"error\");\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0.response);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateCategories = function updateCategories(form) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res, error;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch({\n                type: categoryConstants.UPDATE_CATEGORIES_REQUEST\n              });\n              _context3.next = 3;\n              return axios.post(\"/category/update\", form);\n\n            case 3:\n              res = _context3.sent;\n              console.log(res);\n\n              if (res.status === 201) {\n                dispatch({\n                  type: categoryConstants.UPDATE_CATEGORIES_SUCCESS\n                });\n                dispatch(getAllCategory());\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: categoryConstants.UPDATE_CATEGORIES_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n              }\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteCategories = function deleteCategories(ids) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var res, error;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: categoryConstants.DELETE_CATEGORIES_REQUEST\n              });\n              _context4.next = 3;\n              return axios.post(\"/category/delete\", {\n                payload: {\n                  ids: ids\n                }\n              });\n\n            case 3:\n              res = _context4.sent;\n\n              if (res.status == 202) {\n                dispatch({\n                  type: categoryConstants.DELETE_CATEGORIES_SUCCESS\n                });\n                Swal.fire(\"Great..\", \"Successfully Deleted category...!\", \"success\");\n                dispatch(getAllCategory());\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: categoryConstants.DELETE_CATEGORIES_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n                Swal.fire(\"Opps..\", \"Something Went Wrong.....!\", \"error\");\n                dispatch(getAllCategory());\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/src/actions/category.action.js"],"names":["axios","authConstants","categoryConstants","Swal","getAllCategory","dispatch","type","GET_ALL_CATEGORIES_REQUEST","get","res","console","log","status","categoryList","data","GET_ALL_CATEGORIES_SUCCESS","payload","categories","GET_ALL_CATEGORIES_FAILURE","error","addCategory","form","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","category","fire","ADD_NEW_CATEGORY_FAILURE","response","updateCategories","UPDATE_CATEGORIES_REQUEST","UPDATE_CATEGORIES_SUCCESS","UPDATE_CATEGORIES_FAILURE","deleteCategories","ids","DELETE_CATEGORIES_REQUEST","DELETE_CATEGORIES_SUCCESS","DELETE_CATEGORIES_FAILURE"],"mappings":"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","sourcesContent":["import axios from \"../helpers/axios\";\nimport { authConstants, categoryConstants } from \"./constants\";\nimport Swal from \"sweetalert2\";\n\nexport const getAllCategory = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: categoryConstants.GET_ALL_CATEGORIES_REQUEST });\n\t\tconst res = await axios.get(`category/getcategory`);\n\t\tconsole.log(res);\n\t\tif (res.status === 200) {\n\t\t\tconst { categoryList } = res.data;\n\t\t\tconsole.log(categoryList);\n\n\t\t\tdispatch({\n\t\t\t\ttype: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n\t\t\t\tpayload: { categories: categoryList },\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n\t\t\t\tpayload: { error: res.data.error },\n\t\t\t});\n\t\t}\n\t};\n};\n\nexport const addCategory = (form) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: categoryConstants.ADD_NEW_CATEGORY_REQUEST });\n\t\ttry {\n\t\t\tconst res = await axios.post(\"/category/create\", form);\n\n\t\t\tconsole.log(res);\n\t\t\tif (res.status === 201) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n\t\t\t\t\tpayload: { category: res.data.category },\n\t\t\t\t});\n\t\t\t\tSwal.fire(\"Wow..\", \"Successfully added category...!\", \"success\");\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\n\t\t\t\t\tpayload: res.data.error,\n\t\t\t\t});\n\t\t\t\t\tSwal.fire(\"Opps..\", \"Something went wrong...!\", \"error\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error.response);\n\t\t}\n\t};\n};\n\nexport const updateCategories = (form) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: categoryConstants.UPDATE_CATEGORIES_REQUEST });\n\t\tconst res = await axios.post(\"/category/update\", form);\n\n\t\tconsole.log(res);\n\t\tif (res.status === 201) {\n\t\t\tdispatch({ type: categoryConstants.UPDATE_CATEGORIES_SUCCESS });\n\t\t\tdispatch(getAllCategory());\n\t\t} else {\n\t\t\tconst { error } = res.data;\n\n\t\t\tdispatch({\n\t\t\t\ttype: categoryConstants.UPDATE_CATEGORIES_FAILURE,\n\t\t\t\tpayload: { error },\n\t\t\t});\n\t\t\t\n\t\t}\n\t};\n};\n\nexport const deleteCategories = (ids) => {\n\treturn async (dispatch) => {\n\t\tdispatch({type:categoryConstants.DELETE_CATEGORIES_REQUEST})\n\t\tconst res = await axios.post(\"/category/delete\", {\n\t\t\tpayload: {\n\t\t\t\tids,\n\t\t\t},\n\t\t});\n\t\tif (res.status == 202) {\n\t\t\t\n\t\t\tdispatch({type:categoryConstants.DELETE_CATEGORIES_SUCCESS})\n\t\t\tSwal.fire(\"Great..\", \"Successfully Deleted category...!\", \"success\");\n\t\t\tdispatch(getAllCategory())\n\t\t\t\n\t\t} else {\n\t\t\tconst {error}=res.data\n\t\t\tdispatch({\n\t\t\t\ttype:categoryConstants.DELETE_CATEGORIES_FAILURE,\n\t\t\t\tpayload:{error}\n\t\t\t})\n\t\t\t\tSwal.fire(\"Opps..\", \"Something Went Wrong.....!\", \"error\");\n\t\t\tdispatch(getAllCategory())\n\n\t\t}\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}