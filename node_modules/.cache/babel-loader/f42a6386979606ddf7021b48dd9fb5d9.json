{"ast":null,"code":"import _toConsumableArray from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/mdalif/Desktop/coding/MERN/mern-admin/src/views/products/AddNewProducts/FilesUpload.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { FileUploadContainer, FormField, DragDropText, UploadFileBtn, FilePreviewContainer, ImagePreview, PreviewContainer, PreviewList, FileMetaData, RemoveFileIcon, InputLabel } from \"./FileUpload.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar KILO_BYTES_PER_BYTE = 1000;\nvar DEFAULT_MAX_FILE_SIZE_IN_BYTES = 500000;\n\nvar convertNestedObjectToArray = function convertNestedObjectToArray(nestedObj) {\n  return Object.keys(nestedObj).map(function (key) {\n    return nestedObj[key];\n  });\n};\n\nvar convertBytesToKB = function convertBytesToKB(bytes) {\n  return Math.round(bytes / KILO_BYTES_PER_BYTE);\n};\n\nvar FileUpload = function FileUpload(_ref) {\n  _s();\n\n  var label = _ref.label,\n      updateFilesCb = _ref.updateFilesCb,\n      _ref$maxFileSizeInByt = _ref.maxFileSizeInBytes,\n      maxFileSizeInBytes = _ref$maxFileSizeInByt === void 0 ? DEFAULT_MAX_FILE_SIZE_IN_BYTES : _ref$maxFileSizeInByt,\n      otherProps = _objectWithoutProperties(_ref, [\"label\", \"updateFilesCb\", \"maxFileSizeInBytes\"]);\n\n  var fileInputField = useRef(null);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var handleUploadBtnClick = function handleUploadBtnClick() {\n    fileInputField.current.click();\n  }; //   productPictures(files)\n\n\n  var addNewFiles = function addNewFiles(newFiles) {\n    var _iterator = _createForOfIteratorHelper(newFiles),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var file = _step.value;\n\n        if (file.size <= maxFileSizeInBytes) {\n          if (!otherProps.multiple) {\n            return {\n              file: file\n            };\n          }\n\n          files[file.name] = file;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return _objectSpread({}, files);\n  };\n\n  var callUpdateFilesCb = function callUpdateFilesCb(files) {\n    var filesAsArray = convertNestedObjectToArray(files);\n    updateFilesCb(files);\n  };\n\n  var handleNewFileUpload = function handleNewFileUpload(e) {\n    var newFiles = e.target.files;\n\n    if (newFiles.length) {\n      var updatedFiles = addNewFiles(newFiles);\n      setFiles([].concat(_toConsumableArray(files), [e.target.files[0]]));\n      callUpdateFilesCb(updatedFiles);\n    }\n  };\n\n  var removeFile = function removeFile(fileName) {\n    delete files[fileName];\n    setFiles(_objectSpread({}, files));\n    callUpdateFilesCb(_objectSpread({}, files));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FileUploadContainer, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DragDropText, {\n        children: \"Drag and drop your files anywhere or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(UploadFileBtn, {\n        type: \"button\",\n        onClick: handleUploadBtnClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Upload \", otherProps.multiple ? \"files\" : \"a file\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormField, _objectSpread({\n        type: \"file\",\n        ref: fileInputField,\n        onChange: handleNewFileUpload,\n        title: \"\",\n        value: \"\"\n      }, otherProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FilePreviewContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"To Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(PreviewList, {\n        children: Object.keys(files).map(function (fileName, index) {\n          var file = files[fileName];\n          var isImageFile = file.type.split(\"/\")[0] === \"image\";\n          return /*#__PURE__*/_jsxDEV(PreviewContainer, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [isImageFile && /*#__PURE__*/_jsxDEV(ImagePreview, {\n                src: URL.createObjectURL(file),\n                alt: \"file preview \".concat(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(FileMetaData, {\n                isImageFile: isImageFile,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"aside\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [convertBytesToKB(file.size), \" kb\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(RemoveFileIcon, {\n                    className: \"fas fa-trash-alt\",\n                    onClick: function onClick() {\n                      return removeFile(fileName);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, _this)\n          }, fileName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(FileUpload, \"fFCImuSnRRMf9omi+5S+/8YvRAs=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/src/views/products/AddNewProducts/FilesUpload.js"],"names":["React","useRef","useState","FileUploadContainer","FormField","DragDropText","UploadFileBtn","FilePreviewContainer","ImagePreview","PreviewContainer","PreviewList","FileMetaData","RemoveFileIcon","InputLabel","KILO_BYTES_PER_BYTE","DEFAULT_MAX_FILE_SIZE_IN_BYTES","convertNestedObjectToArray","nestedObj","Object","keys","map","key","convertBytesToKB","bytes","Math","round","FileUpload","label","updateFilesCb","maxFileSizeInBytes","otherProps","fileInputField","files","setFiles","handleUploadBtnClick","current","click","addNewFiles","newFiles","file","size","multiple","name","callUpdateFilesCb","filesAsArray","handleNewFileUpload","e","target","length","updatedFiles","removeFile","fileName","index","isImageFile","type","split","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport {\n  FileUploadContainer,\n  FormField,\n  DragDropText,\n  UploadFileBtn,\n  FilePreviewContainer,\n  ImagePreview,\n  PreviewContainer,\n  PreviewList,\n  FileMetaData,\n  RemoveFileIcon,\n  InputLabel,\n} from \"./FileUpload.styles\";\n\nconst KILO_BYTES_PER_BYTE = 1000;\nconst DEFAULT_MAX_FILE_SIZE_IN_BYTES = 500000;\n\nconst convertNestedObjectToArray = (nestedObj) =>\n  Object.keys(nestedObj).map((key) => nestedObj[key]);\n\nconst convertBytesToKB = (bytes) => Math.round(bytes / KILO_BYTES_PER_BYTE);\n\nconst FileUpload = ({\n  label,\n  updateFilesCb,\n  maxFileSizeInBytes = DEFAULT_MAX_FILE_SIZE_IN_BYTES,\n  ...otherProps\n}) => {\n  const fileInputField = useRef(null);\n  const [files, setFiles] = useState([]);\n\n  const handleUploadBtnClick = () => {\n    fileInputField.current.click();\n  };\n\n//   productPictures(files)\n\n  const addNewFiles = (newFiles) => {\n    for (let file of newFiles) {\n      if (file.size <= maxFileSizeInBytes) {\n        if (!otherProps.multiple) {\n          return { file };\n        }\n        files[file.name] = file;\n      }\n    }\n    return { ...files };\n  };\n\n  const callUpdateFilesCb = (files) => {\n    const filesAsArray = convertNestedObjectToArray(files);\n    updateFilesCb(files);\n  };\n\n\n\n\n\n  const handleNewFileUpload = (e) => {\n    const { files: newFiles } = e.target;\n    if (newFiles.length) {\n      let updatedFiles = addNewFiles(newFiles);\n      setFiles([...files, e.target.files[0]]);\n   \n      callUpdateFilesCb(updatedFiles);\n    }\n  };\n\n  const removeFile = (fileName) => {\n    delete files[fileName];\n    setFiles({ ...files });\n    callUpdateFilesCb({ ...files });\n  };\n\n\n\n  return (\n    <>\n      <FileUploadContainer>\n        <InputLabel>{label}</InputLabel>\n        <DragDropText>Drag and drop your files anywhere or</DragDropText>\n        <UploadFileBtn type=\"button\" onClick={handleUploadBtnClick}>\n          <i className=\"fas fa-file-upload\" />\n          <span> Upload {otherProps.multiple ? \"files\" : \"a file\"}</span>\n        </UploadFileBtn>\n        <FormField\n          type=\"file\"\n          ref={fileInputField}\n          onChange={handleNewFileUpload}\n          title=\"\"\n          value=\"\"\n          {...otherProps}\n        />\n      </FileUploadContainer>\n      <FilePreviewContainer>\n        <span>To Upload</span>\n        <PreviewList>\n          {Object.keys(files).map((fileName, index) => {\n            let file = files[fileName];\n            let isImageFile = file.type.split(\"/\")[0] === \"image\";\n            return (\n              <PreviewContainer key={fileName}>\n                <div>\n                  {isImageFile && (\n                    <ImagePreview\n                      src={URL.createObjectURL(file)}\n                      alt={`file preview ${index}`}\n                    />\n                  )}\n                  <FileMetaData isImageFile={isImageFile}>\n                    <span>{file.name}</span>\n                    <aside>\n                      <span>{convertBytesToKB(file.size)} kb</span>\n                      <RemoveFileIcon\n                        className=\"fas fa-trash-alt\"\n                        onClick={() => removeFile(fileName)}\n                      />\n                    </aside>\n                  </FileMetaData>\n                </div>\n              </PreviewContainer>\n            );\n          })}\n        </PreviewList>\n      </FilePreviewContainer>\n    </>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}