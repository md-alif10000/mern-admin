{"ast":null,"code":"import _regeneratorRuntime from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"../helpers/axios\";\nimport { categoryConstants, initialDataConstants, orderConstants, productConstants, ge, getUsers, rechargeConstants } from \"./constants\";\nexport var getInitialData = function getInitialData() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, _res$data, products, categories, orders, users, recharges;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: initialDataConstants.GET_ALL_INITIAL_DATA_REQUEST\n              });\n              _context.next = 3;\n              return axios.post('/initialdata');\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                _res$data = res.data, products = _res$data.products, categories = _res$data.categories, orders = _res$data.orders, users = _res$data.users, recharges = _res$data.recharges;\n                dispatch({\n                  type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n                  payload: {\n                    categories: categories\n                  }\n                });\n                dispatch({\n                  type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n                  payload: {\n                    products: products\n                  }\n                });\n                dispatch({\n                  type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n                  payload: {\n                    orders: orders\n                  }\n                });\n                dispatch({\n                  type: getUsers.GET_ALL_USERS_SUCCESS,\n                  payload: {\n                    users: users\n                  }\n                });\n                dispatch({\n                  type: rechargeConstants.GET_ALL_RECHARGE_SUCCESS,\n                  payload: {\n                    recharges: recharges\n                  }\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/src/actions/initialData.action.js"],"names":["axios","categoryConstants","initialDataConstants","orderConstants","productConstants","ge","getUsers","rechargeConstants","getInitialData","dispatch","type","GET_ALL_INITIAL_DATA_REQUEST","post","res","status","data","products","categories","orders","users","recharges","GET_ALL_CATEGORIES_SUCCESS","payload","GET_ALL_PRODUCTS_SUCCESS","GET_CUSTOMER_ORDER_SUCCESS","GET_ALL_USERS_SUCCESS","GET_ALL_RECHARGE_SUCCESS"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,cAAlD,EAAkEC,gBAAlE,EAAmFC,EAAnF,EAAuFC,QAAvF,EAAiGC,iBAAjG,QAA0H,aAA1H;AAEA,OAAO,IAAMC,cAAc,GAAC,SAAfA,cAAe,GAAI;AAC5B;AAAA,wEAAO,iBAAMC,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACHA,cAAAA,QAAQ,CAAC;AAACC,gBAAAA,IAAI,EAACR,oBAAoB,CAACS;AAA3B,eAAD,CAAR;AADG;AAAA,qBAEaX,KAAK,CAACY,IAAN,CAAW,cAAX,CAFb;;AAAA;AAEGC,cAAAA,GAFH;;AAIH,kBAAGA,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AAAA,4BACmCD,GAAG,CAACE,IADvC,EACTC,QADS,aACTA,QADS,EACAC,UADA,aACAA,UADA,EACWC,MADX,aACWA,MADX,EACkBC,KADlB,aACkBA,KADlB,EACwBC,SADxB,aACwBA,SADxB;AAGhBX,gBAAAA,QAAQ,CAAC;AACLC,kBAAAA,IAAI,EAACT,iBAAiB,CAACoB,0BADlB;AAELC,kBAAAA,OAAO,EAAC;AAACL,oBAAAA,UAAU,EAAVA;AAAD;AAFH,iBAAD,CAAR;AAKAR,gBAAAA,QAAQ,CAAC;AACLC,kBAAAA,IAAI,EAACN,gBAAgB,CAACmB,wBADjB;AAELD,kBAAAA,OAAO,EAAC;AAACN,oBAAAA,QAAQ,EAARA;AAAD;AAFH,iBAAD,CAAR;AAKAP,gBAAAA,QAAQ,CAAC;AACLC,kBAAAA,IAAI,EAACP,cAAc,CAACqB,0BADf;AAELF,kBAAAA,OAAO,EAAC;AAACJ,oBAAAA,MAAM,EAANA;AAAD;AAFH,iBAAD,CAAR;AAIET,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEJ,QAAQ,CAACmB,qBADR;AAEPH,kBAAAA,OAAO,EAAE;AAAEH,oBAAAA,KAAK,EAALA;AAAF;AAFF,iBAAD,CAAR;AAIAV,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEH,iBAAiB,CAACmB,wBADjB;AAEPJ,kBAAAA,OAAO,EAAE;AAAEF,oBAAAA,SAAS,EAATA;AAAF;AAFF,iBAAD,CAAR;AAOL;;AAhCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkCH,CAnCM","sourcesContent":["import axios from \"../helpers/axios\"\nimport { categoryConstants, initialDataConstants, orderConstants, productConstants,ge, getUsers, rechargeConstants } from \"./constants\"\n\nexport const getInitialData=()=>{\n    return async dispatch=>{\n        dispatch({type:initialDataConstants.GET_ALL_INITIAL_DATA_REQUEST})\n        const res=await axios.post('/initialdata')\n        \n        if(res.status===200){\n            const {products,categories,orders,users,recharges}=res.data;\n            \n            dispatch({\n                type:categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n                payload:{categories}\n            });\n\n            dispatch({\n                type:productConstants.GET_ALL_PRODUCTS_SUCCESS,\n                payload:{products}\n\n            })\n            dispatch({\n                type:orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n                payload:{orders}\n            })\n              dispatch({\n                type: getUsers.GET_ALL_USERS_SUCCESS,\n                payload: { users },\n              });\n              dispatch({\n                type: rechargeConstants.GET_ALL_RECHARGE_SUCCESS,\n                payload: { recharges },\n              });\n\n\n\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}