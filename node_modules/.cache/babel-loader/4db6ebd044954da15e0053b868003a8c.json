{"ast":null,"code":"import _slicedToArray from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/mdalif/Desktop/coding/MERN/mern-admin/src/views/orders/index2.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder } from \"../../actions\";\nimport Card from \"../components/UI/Card\";\nimport \"./style.css\";\n/**\n * @author\n * @function Orders\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Orders = function Orders(props) {\n  _s();\n\n  var order = useSelector(function (state) {\n    return state.order;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var onOrderUpdate = function onOrderUpdate(orderId) {\n    var payload = {\n      orderId: orderId,\n      type: type\n    };\n    dispatch(updateOrder(payload));\n  };\n\n  var formatDate = function formatDate(date) {\n    if (date) {\n      var d = new Date(date);\n      return \"\".concat(d.getFullYear(), \"-\").concat(d.getMonth() + 1, \"-\").concat(d.getDate());\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: order.orders.map(function (orderItem, index) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          margin: \"10px 0\"\n        },\n        headerLeft: orderItem._id,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            padding: \"50px 50px\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: \"Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, _this), orderItem.items.map(function (item, index) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value\",\n                children: item.productId.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: orderItem.totalAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Payment Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, _this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 59\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: orderItem.paymentType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Payment Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, _this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 61\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: orderItem.paymentStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            boxSizing: \"border-box\",\n            padding: \"100px\",\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orderTrack\",\n            children: orderItem.orderStatus.map(function (status) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"orderStatus \".concat(status.isCompleted ? \"active\" : \"\"),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"point \".concat(status.isCompleted ? \"active\" : \"\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"orderInfo\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"status\",\n                    children: status.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"date\",\n                    children: formatDate(status.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"0 50px\",\n              boxSizing: \"border-box\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: function onChange(e) {\n                return setType(e.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"select status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, _this), orderItem.orderStatus.map(function (status) {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: !status.isCompleted ? /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: status.type,\n                    children: status.type\n                  }, status.type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 25\n                  }, _this) : null\n                }, void 0, false);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"0 50px\",\n              boxSizing: \"border-box\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: function onClick() {\n                return onOrderUpdate(orderItem._id);\n              },\n              children: \"confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(Orders, \"DJe6dUD7pcLQ9SEy+JKpf32O1wk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/src/views/orders/index2.js"],"names":["React","useState","useDispatch","useSelector","updateOrder","Card","Orders","props","order","state","type","setType","dispatch","onOrderUpdate","orderId","payload","formatDate","date","d","Date","getFullYear","getMonth","getDate","orders","map","orderItem","index","margin","_id","display","justifyContent","padding","alignItems","items","item","productId","name","totalAmount","paymentType","paymentStatus","boxSizing","orderStatus","status","isCompleted","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder } from \"../../actions\";\nimport Card from \"../components/UI/Card\";\n\nimport \"./style.css\";\n\n/**\n * @author\n * @function Orders\n **/\n\nconst Orders = (props) => {\n  const order = useSelector((state) => state.order);\n  const [type, setType] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onOrderUpdate = (orderId) => {\n    const payload = {\n      orderId,\n      type,\n    };\n    dispatch(updateOrder(payload));\n  };\n\n  const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  };\n\n  return (\n    <>\n      {order.orders.map((orderItem, index) => (\n        <Card\n          style={{\n            margin: \"10px 0\",\n          }}\n          key={index}\n          headerLeft={orderItem._id}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"50px 50px\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <div className=\"title\">Items</div>\n              {orderItem.items.map((item, index) => (\n                <div className=\"value\" key={index}>\n                  {item.productId.name}\n                </div>\n              ))}\n            </div>\n            <div>\n              <span className=\"title\">Total Price</span>\n              <br />\n              <span className=\"value\">{orderItem.totalAmount}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Type</span> <br />\n              <span className=\"value\">{orderItem.paymentType}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Status</span> <br />\n              <span className=\"value\">{orderItem.paymentStatus}</span>\n            </div>\n          </div>\n          <div\n            style={{\n              boxSizing: \"border-box\",\n              padding: \"100px\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <div className=\"orderTrack\">\n              {orderItem.orderStatus.map((status) => (\n                <div\n                  className={`orderStatus ${\n                    status.isCompleted ? \"active\" : \"\"\n                  }`}\n                >\n                  <div\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\n                  ></div>\n                  <div className=\"orderInfo\">\n                    <div className=\"status\">{status.type}</div>\n                    <div className=\"date\">{formatDate(status.date)}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* select input to apply order action */}\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <select onChange={(e) => setType(e.target.value)}>\n                <option value={\"\"}>select status</option>\n                {orderItem.orderStatus.map((status) => {\n                  return (\n                    <>\n                      {!status.isCompleted ? (\n                        <option key={status.type} value={status.type}>\n                          {status.type}\n                        </option>\n                      ) : null}\n                    </>\n                  );\n                })}\n              </select>\n            </div>\n            {/* button to confirm action */}\n\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <button onClick={() => onOrderUpdate(orderItem._id)}>\n                confirm\n              </button>\n            </div>\n          </div>\n        </Card>\n      ))}\n    </>\n  );\n\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}