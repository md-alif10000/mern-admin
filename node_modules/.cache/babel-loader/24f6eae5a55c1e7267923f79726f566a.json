{"ast":null,"code":"import _regeneratorRuntime from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"../helpers/axios\";\nimport { orderConstants } from \"./constants\";\nimport Swal from \"sweetalert2\";\nexport var getCustomerOrders = function getCustomerOrders() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, orders, error;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: orderConstants.GET_CUSTOMER_ORDER_REQUEST\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.post(\"/order/getCustomerOrders\");\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                orders = res.data.orders;\n                dispatch({\n                  type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n                  payload: {\n                    orders: orders\n                  }\n                });\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var updateOrder = function updateOrder(payload) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, error;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post(\"/order/update\", payload);\n\n            case 4:\n              res = _context2.sent;\n\n              if (res.status === 201) {\n                dispatch({\n                  type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS\n                });\n                dispatch(getCustomerOrders());\n                Swal.fire(\"Great..\", \"Order Successfully Updated...!\", \"success\");\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n                Swal.fire(\"Opps..\", \"Something went wrong...!\", \"error\");\n              }\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/src/actions/orders.action.js"],"names":["axios","orderConstants","Swal","getCustomerOrders","dispatch","type","GET_CUSTOMER_ORDER_REQUEST","post","res","status","orders","data","GET_CUSTOMER_ORDER_SUCCESS","payload","error","GET_CUSTOMER_ORDER_FAILURE","console","log","updateOrder","UPDATE_CUSTOMER_ORDER_REQUEST","UPDATE_CUSTOMER_ORDER_SUCCESS","fire","UPDATE_CUSTOMER_ORDER_FAILURE"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACtC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACNA,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEJ,cAAc,CAACK;AAAvB,eAAD,CAAR;AADM;AAAA;AAAA,qBAGaN,KAAK,CAACO,IAAN,CAAW,0BAAX,CAHb;;AAAA;AAGCC,cAAAA,GAHD;;AAIL,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACfC,gBAAAA,MADe,GACJF,GAAG,CAACG,IADA,CACfD,MADe;AAEvBN,gBAAAA,QAAQ,CAAC;AACRC,kBAAAA,IAAI,EAAEJ,cAAc,CAACW,0BADb;AAERC,kBAAAA,OAAO,EAAE;AAAEH,oBAAAA,MAAM,EAANA;AAAF;AAFD,iBAAD,CAAR;AAIA,eAND,MAMO;AACEI,gBAAAA,KADF,GACYN,GAAG,CAACG,IADhB,CACEG,KADF;AAENV,gBAAAA,QAAQ,CAAC;AACRC,kBAAAA,IAAI,EAAEJ,cAAc,CAACc,0BADb;AAERF,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,KAAK,EAALA;AAAF;AAFD,iBAAD,CAAR;AAIA;;AAhBI;AAAA;;AAAA;AAAA;AAAA;AAkBLE,cAAAA,OAAO,CAACC,GAAR;;AAlBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAqBA,CAtBM;AAwBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACL,OAAD,EAAa;AACvC;AAAA,yEAAO,kBAAOT,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACNA,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEJ,cAAc,CAACkB;AAAvB,eAAD,CAAR;AADM;AAAA;AAAA,qBAGanB,KAAK,CAACO,IAAN,CAAW,eAAX,EAA4BM,OAA5B,CAHb;;AAAA;AAGCL,cAAAA,GAHD;;AAIL,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACvBL,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEJ,cAAc,CAACmB;AAAvB,iBAAD,CAAR;AACAhB,gBAAAA,QAAQ,CAACD,iBAAiB,EAAlB,CAAR;AACED,gBAAAA,IAAI,CAACmB,IAAL,CAAU,SAAV,EAAqB,gCAArB,EAAuD,SAAvD;AACF,eAJD,MAIO;AACEP,gBAAAA,KADF,GACYN,GAAG,CAACG,IADhB,CACEG,KADF;AAENV,gBAAAA,QAAQ,CAAC;AACRC,kBAAAA,IAAI,EAAEJ,cAAc,CAACqB,6BADb;AAERT,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,KAAK,EAALA;AAAF;AAFD,iBAAD,CAAR;AAIEZ,gBAAAA,IAAI,CAACmB,IAAL,CAAU,QAAV,EAAoB,0BAApB,EAAgD,OAAhD;AACF;;AAfI;AAAA;;AAAA;AAAA;AAAA;AAiBLL,cAAAA,OAAO,CAACC,GAAR;;AAjBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAoBA,CArBM","sourcesContent":["import axios from \"../helpers/axios\";\nimport { orderConstants } from \"./constants\";\nimport Swal from \"sweetalert2\";\n\nexport const getCustomerOrders = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: orderConstants.GET_CUSTOMER_ORDER_REQUEST });\n\t\ttry {\n\t\t\tconst res = await axios.post(\"/order/getCustomerOrders\");\n\t\t\tif (res.status === 200) {\n\t\t\t\tconst { orders } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n\t\t\t\t\tpayload: { orders },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst { error } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\n\t\t\t\t\tpayload: { error },\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\nexport const updateOrder = (payload) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST });\n\t\ttry {\n\t\t\tconst res = await axios.post(\"/order/update\", payload);\n\t\t\tif (res.status === 201) {\n\t\t\t\tdispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS });\n\t\t\t\tdispatch(getCustomerOrders());\n\t\t\t\t\t\tSwal.fire(\"Great..\", \"Order Successfully Updated...!\", \"success\");\n\t\t\t} else {\n\t\t\t\tconst { error } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\n\t\t\t\t\tpayload: { error },\n\t\t\t\t});\n\t\t\t\t\t\tSwal.fire(\"Opps..\", \"Something went wrong...!\", \"error\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}