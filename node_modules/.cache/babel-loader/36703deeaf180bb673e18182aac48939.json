{"ast":null,"code":"import _objectSpread from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { rechargeConstants } from \"../actions/constants\";\nvar initState = {\n  recharges: [],\n  loading: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case rechargeConstants.GET_ALL_RECHARGE_REQUEST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case rechargeConstants.GET_ALL_RECHARGE_SUCCESS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        recharges: action.payload.recharges\n      });\n      break;\n\n    case rechargeConstants.GET_ALL_RECHARGE_FAILURE:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/src/reducers/recharges.reducer.js"],"names":["rechargeConstants","initState","recharges","loading","state","action","type","GET_ALL_RECHARGE_REQUEST","GET_ALL_RECHARGE_SUCCESS","payload","GET_ALL_RECHARGE_FAILURE"],"mappings":";AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,EADK;AAEhBC,EAAAA,OAAO,EAAC;AAFQ,CAAlB;AAKA,gBAAe,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAiB,CAACO,wBAAvB;AACIH,MAAAA,KAAK,mCACEA,KADF;AAEDD,QAAAA,OAAO,EAAC;AAFP,QAAL;;AAKN,SAAKH,iBAAiB,CAACQ,wBAAvB;AACEJ,MAAAA,KAAK,mCACAA,KADA;AAEHF,QAAAA,SAAS,EAAEG,MAAM,CAACI,OAAP,CAAeP;AAFvB,QAAL;AAIA;;AACA,SAAKF,iBAAiB,CAACU,wBAAvB;AACIN,MAAAA,KAAK,mCAAKA,KAAL;AACPD,QAAAA,OAAO,EAAC;AADD,QAAL;AAdR;;AAkBA,SAAOC,KAAP;AACD,CApBD","sourcesContent":["import { rechargeConstants } from \"../actions/constants\";\n\nconst initState = {\n  recharges: [],\n  loading:false\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n      case rechargeConstants.GET_ALL_RECHARGE_REQUEST:\n          state={\n              ...state,\n              loading:true\n          }\n\n    case rechargeConstants.GET_ALL_RECHARGE_SUCCESS:\n      state = {\n        ...state,\n        recharges: action.payload.recharges,\n      };\n      break;\n      case rechargeConstants.GET_ALL_RECHARGE_FAILURE:\n          state={...state,\n        loading:false}\n  }\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}