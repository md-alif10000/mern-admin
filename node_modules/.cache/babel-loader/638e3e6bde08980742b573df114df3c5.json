{"ast":null,"code":"import _regeneratorRuntime from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"../helpers/axios\";\nimport { couponConstants } from \"./constants\";\nexport var getAllCoupon = function getAllCoupon() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, coupons;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: couponConstants.GET_ALL_COUPON_REQUEST\n              });\n              _context.next = 4;\n              return axios.get(\"/coupon/allCoupon\");\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                coupons = res.data.coupons;\n                console.log(coupons);\n                dispatch({\n                  type: couponConstants.GET_ALL_COUPON_SUCCESS,\n                  payload: {\n                    coupons: coupons\n                  }\n                });\n              } else {\n                dispatch({\n                  type: couponConstants.GET_ALL_COUPON_FAILURE\n                });\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var addCoupon = function addCoupon(data) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, coupon;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: couponConstants.ADD_NEW_COUPON_REQUEST\n              });\n              _context2.next = 4;\n              return axios.post(\"/coupon/addCoupon\", data);\n\n            case 4:\n              res = _context2.sent;\n\n              if (res.status === 201) {\n                coupon = res.data.coupon;\n                dispatch({\n                  type: couponConstants.ADD_NEW_COUPON_SUCCESS,\n                  payload: {\n                    coupon: coupon\n                  }\n                });\n              } else {\n                dispatch({\n                  type: couponConstants.ADD_NEW_COUPON_FAILURE\n                });\n              }\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/src/actions/coupon.action.js"],"names":["axios","couponConstants","getAllCoupon","dispatch","type","GET_ALL_COUPON_REQUEST","get","res","status","coupons","data","console","log","GET_ALL_COUPON_SUCCESS","payload","GET_ALL_COUPON_FAILURE","addCoupon","ADD_NEW_COUPON_REQUEST","post","coupon","ADD_NEW_COUPON_SUCCESS","ADD_NEW_COUPON_FAILURE"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,SAASC,eAAT,QAAgC,aAAhC;AAIA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACjC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELA,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEH,eAAe,CAACI;AAAxB,eAAD,CAAR;AAFK;AAAA,qBAGaL,KAAK,CAACM,GAAN,CAAU,mBAAV,CAHb;;AAAA;AAGCC,cAAAA,GAHD;;AAIL,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACfC,gBAAAA,OADe,GACHF,GAAG,CAACG,IADD,CACfD,OADe;AAEvBE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAN,gBAAAA,QAAQ,CAAC;AACRC,kBAAAA,IAAI,EAAEH,eAAe,CAACY,sBADd;AAERC,kBAAAA,OAAO,EAAE;AAAEL,oBAAAA,OAAO,EAAPA;AAAF;AAFD,iBAAD,CAAR;AAIA,eAPD,MAOO;AACNN,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEH,eAAe,CAACc;AAAxB,iBAAD,CAAR;AACA;;AAbI;AAAA;;AAAA;AAAA;AAAA;AAeLJ,cAAAA,OAAO,CAACC,GAAR;;AAfK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkBA,CAnBM;AAsBP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACN,IAAD,EAAU;AAClC;AAAA,yEAAO,kBAAOP,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELA,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEH,eAAe,CAACgB;AAAxB,eAAD,CAAR;AAFK;AAAA,qBAGajB,KAAK,CAACkB,IAAN,sBAAgCR,IAAhC,CAHb;;AAAA;AAGCH,cAAAA,GAHD;;AAIL,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACfW,gBAAAA,MADe,GACJZ,GAAG,CAACG,IADA,CACfS,MADe;AAEvBhB,gBAAAA,QAAQ,CAAC;AACRC,kBAAAA,IAAI,EAAEH,eAAe,CAACmB,sBADd;AAERN,kBAAAA,OAAO,EAAE;AAAEK,oBAAAA,MAAM,EAANA;AAAF;AAFD,iBAAD,CAAR;AAIA,eAND,MAMO;AACNhB,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEH,eAAe,CAACoB;AAAxB,iBAAD,CAAR;AACA;;AAZI;AAAA;;AAAA;AAAA;AAAA;AAcLV,cAAAA,OAAO,CAACC,GAAR;;AAdK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAiBA,CAlBM","sourcesContent":["import axios from \"../helpers/axios\";\n\nimport { couponConstants } from \"./constants\";\n\n\n\nexport const getAllCoupon = () => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tdispatch({ type: couponConstants.GET_ALL_COUPON_REQUEST });\n\t\t\tconst res = await axios.get(\"/coupon/allCoupon\");\n\t\t\tif (res.status === 200) {\n\t\t\t\tconst { coupons } = res.data;\n\t\t\t\tconsole.log(coupons);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: couponConstants.GET_ALL_COUPON_SUCCESS,\n\t\t\t\t\tpayload: { coupons },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({ type: couponConstants.GET_ALL_COUPON_FAILURE });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\n\nexport const addCoupon = (data) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tdispatch({ type: couponConstants.ADD_NEW_COUPON_REQUEST });\n\t\t\tconst res = await axios.post(`/coupon/addCoupon`, data);\n\t\t\tif (res.status === 201) {\n\t\t\t\tconst { coupon } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: couponConstants.ADD_NEW_COUPON_SUCCESS,\n\t\t\t\t\tpayload: { coupon },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({ type: couponConstants.ADD_NEW_COUPON_FAILURE });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}