{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useIsomorphicEffect } from './useKeyDown';\n\nvar getOrientation = function getOrientation() {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  } // Support IOS safari\n\n\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n\n  return 'portrait';\n};\n\nexport function useIsLandscape(customOrientation) {\n  var _React$useState = React.useState(getOrientation()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      orientation = _React$useState2[0],\n      setOrientation = _React$useState2[1];\n\n  var eventHandler = React.useCallback(function () {\n    return setOrientation(getOrientation());\n  }, []);\n  useIsomorphicEffect(function () {\n    window.addEventListener('orientationchange', eventHandler);\n    return function () {\n      return window.removeEventListener('orientationchange', eventHandler);\n    };\n  }, [eventHandler]);\n  var orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n}","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-admin/node_modules/@material-ui/pickers/esm/_shared/hooks/useIsLandscape.js"],"names":["_slicedToArray","React","useIsomorphicEffect","getOrientation","window","screen","orientation","angle","Math","abs","Number","useIsLandscape","customOrientation","_React$useState","useState","_React$useState2","setOrientation","eventHandler","useCallback","addEventListener","removeEventListener","orientationToUse"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,cAApC;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,GAA0B;AAC7C,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,UAAP;AACD;;AAED,MAAIA,MAAM,CAACC,MAAP,IAAiBD,MAAM,CAACC,MAAP,CAAcC,WAA/B,IAA8CF,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0BC,KAA5E,EAAmF;AACjF,WAAOC,IAAI,CAACC,GAAL,CAASL,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0BC,KAAnC,MAA8C,EAA9C,GAAmD,WAAnD,GAAiE,UAAxE;AACD,GAP4C,CAO3C;;;AAGF,MAAIH,MAAM,CAACE,WAAX,EAAwB;AACtB,WAAOE,IAAI,CAACC,GAAL,CAASC,MAAM,CAACN,MAAM,CAACE,WAAR,CAAf,MAAyC,EAAzC,GAA8C,WAA9C,GAA4D,UAAnE;AACD;;AAED,SAAO,UAAP;AACD,CAfD;;AAiBA,OAAO,SAASK,cAAT,CAAwBC,iBAAxB,EAA2C;AAChD,MAAIC,eAAe,GAAGZ,KAAK,CAACa,QAAN,CAAeX,cAAc,EAA7B,CAAtB;AAAA,MACIY,gBAAgB,GAAGf,cAAc,CAACa,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIP,WAAW,GAAGS,gBAAgB,CAAC,CAAD,CAFlC;AAAA,MAGIC,cAAc,GAAGD,gBAAgB,CAAC,CAAD,CAHrC;;AAKA,MAAIE,YAAY,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,YAAY;AAC/C,WAAOF,cAAc,CAACb,cAAc,EAAf,CAArB;AACD,GAFkB,EAEhB,EAFgB,CAAnB;AAGAD,EAAAA,mBAAmB,CAAC,YAAY;AAC9BE,IAAAA,MAAM,CAACe,gBAAP,CAAwB,mBAAxB,EAA6CF,YAA7C;AACA,WAAO,YAAY;AACjB,aAAOb,MAAM,CAACgB,mBAAP,CAA2B,mBAA3B,EAAgDH,YAAhD,CAAP;AACD,KAFD;AAGD,GALkB,EAKhB,CAACA,YAAD,CALgB,CAAnB;AAMA,MAAII,gBAAgB,GAAGT,iBAAiB,IAAIN,WAA5C;AACA,SAAOe,gBAAgB,KAAK,WAA5B;AACD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useIsomorphicEffect } from './useKeyDown';\n\nvar getOrientation = function getOrientation() {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  } // Support IOS safari\n\n\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n\n  return 'portrait';\n};\n\nexport function useIsLandscape(customOrientation) {\n  var _React$useState = React.useState(getOrientation()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      orientation = _React$useState2[0],\n      setOrientation = _React$useState2[1];\n\n  var eventHandler = React.useCallback(function () {\n    return setOrientation(getOrientation());\n  }, []);\n  useIsomorphicEffect(function () {\n    window.addEventListener('orientationchange', eventHandler);\n    return function () {\n      return window.removeEventListener('orientationchange', eventHandler);\n    };\n  }, [eventHandler]);\n  var orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n}"]},"metadata":{},"sourceType":"module"}